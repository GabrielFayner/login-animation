* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html,
body {
  height: 100vh;
}

body {
  background-color: #008B8B;
  font-family: Roboto, Arial, sans-serif;
}

section {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

h1 {
  font-size: 32px;
  letter-spacing: 1px;
  margin: 20px 0;
  color: white;
}

form {
  margin: 20px 0;
  background-color: white;
  padding: 30px 25px;
  border-radius: 5px;
  border: 3px solid 	#2F4F4F;
}

form .input-block {
  margin-bottom: 20px;
}

form .input-block label {
  font-size: 14px;
  color: #008080;
}

form .input-block input {
  width: 100%;
  display: block;
  margin-top: 8px;
  padding: 7px;
  font-size: 16px;
  color: #008080;
  border-radius: 2px;
  border: 1px solid #ccddef;
  outline-color: #008080;
}

form .btn-login {
  display: block;
  min-width: 120px;
  border: none;
  background-color: #00CED1;
  color: white;
  border-radius: 25px;
  margin: auto;
  padding: 7px;
}
form {
  overflow: hidden;
  animation: fade 0.2s;
}
form .input-block:nth-child(1) {
  animation: move 500ms;
}
form .input-block:nth-child(2) {
  animation: move 400ms;
  animation-delay: 100ms;
  animation-fill-mode: backwards;
}

form .btn-login {
  animation: move 400ms;
  animation-delay: 250ms;
  animation-fill-mode: backwards;
}

/*Aparição do componentes de login*/

@keyframes move {
  from {
    opacity: 0;
    transform: translateX(-35%);
  }
  to {
    opacity: 1;
    transform: translateX(0%);
  }
}

/*Aparição do formulario*/

@keyframes fade {
  from {
    opacity: 0;
    transform: scale(0.9);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

/*Quando haver o click, o formulario tem q sumir*/

.form-hide {
  animation: down 1.2s forwards;
  animation-timing-function: cubic-bezier(0.075, 0.82, 0.165, 1);
}
@keyframes down {
  form {
    transform: translateY(0);
  }
  to { 
    transform: translateY(100vh);
  }
}

/*FORM NO-NO*/

form.validate-error {
  animation: nono 200ms linear, fade paused;
  animation-iteration-count: 2;
}

@keyframes nono {
  0%, 
  100% {
    transform: translateX(0);
  }
  35% {
    transform: translateX(-15%);
  }
  70% {
    transform: translateX(15%);
  }

}

/* Squares */
body {
  overflow: hidden;
}
.squares li {
  width: 40px;
  height: 40px;
  background-color: rgba(255,255,255,0.15);
  display: block;
  position: absolute;
  bottom: -40px;
  animation: up 2s infinite;
  animation-direction: alternate;
}

@keyframes up {
  from {
    opacity: 0;
    transform: translateY(0) ;
  }
  50%{
    opacity: 1;
  }
  to {
    opacity: 0;
    transform: translateY(-900px) rotate(960deg);
  }
}

/* propriedades aprendidas (8) :

- animation-name: animationname;
- animation-duration: 2s;
- animation-delay: 3s; 
- animation-fill-mode: none;
- animation-play-state: running;
- animation-timing-function: ease;
- animation-direction: reverse;
- animation-iteration-count: infinite; 

@ keyframes (nome que eu atribuir da animation) {
    0% {
    
    }
    50% {
    
    }
    100% {
    
    }  
      
}
Podemos ter varias animações em um unico elemento.

*/